(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{354:function(t,a,s){"use strict";s.r(a);var n=s(43),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"web"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#web"}},[t._v("#")]),t._v(" Web")]),t._v(" "),s("h2",{attrs:{id:"markdown"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#markdown"}},[t._v("#")]),t._v(" Markdown")]),t._v(" "),s("h3",{attrs:{id:"简介"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),s("p",[t._v("Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。\nMarkdown 编写的文档可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。\nMarkdown 编写的文档后缀为 .md, .markdown。")]),t._v(" "),s("h3",{attrs:{id:"标题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#标题"}},[t._v("#")]),t._v(" 标题")]),t._v(" "),s("h4",{attrs:{id:"markdown-标题有两种格式。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#markdown-标题有两种格式。"}},[t._v("#")]),t._v(" Markdown 标题有两种格式。")]),t._v(" "),s("h5",{attrs:{id:"使用-和-标记一级和二级标题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#使用-和-标记一级和二级标题"}},[t._v("#")]),t._v(" 使用 = 和 - 标记一级和二级标题")]),t._v(" "),s("p",[t._v("= 和 - 标记语法格式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("我展示的是一级标题\n=================\n我展示的是二级标题\n-----------------\n")])])]),s("p",[t._v("使用 # 号标记\n使用 # 号可表示 1-6 级标题，一级标题对应一个 # 号，二级标题对应两个 # 号，以此类推。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("# 一级标题\n## 二级标题\n### 三级标题\n#### 四级标题\n##### 五级标题\n###### 六级标题\n")])])]),s("h3",{attrs:{id:"段落"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#段落"}},[t._v("#")]),t._v(" 段落")]),t._v(" "),s("p",[t._v("Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。\n当然也可以在段落后面使用一个空行来表示重新开始一个段落。")]),t._v(" "),s("h4",{attrs:{id:"字体"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#字体"}},[t._v("#")]),t._v(" 字体")]),t._v(" "),s("p",[t._v("Markdown 可以使用以下几种字体：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("斜体文本"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n_斜体文本_\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("粗体文本"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),t._v("\n__粗体文本__\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("粗斜体文本"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n___粗斜体文本___\n")])])]),s("p",[s("em",[t._v("斜体文本")]),t._v(" "),s("em",[t._v("斜体文本")]),t._v(" "),s("strong",[t._v("粗体文本")]),t._v(" "),s("strong",[t._v("粗体文本")]),t._v(" "),s("em",[s("strong",[t._v("粗斜体文本")])]),t._v(" "),s("em",[s("strong",[t._v("粗斜体文本")])])]),t._v(" "),s("h4",{attrs:{id:"分隔线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#分隔线"}},[t._v("#")]),t._v(" 分隔线")]),t._v(" "),s("p",[t._v("你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("**")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("\n")])])]),s("hr"),t._v(" "),s("hr"),t._v(" "),s("hr"),t._v(" "),s("hr"),t._v(" "),s("hr"),t._v(" "),s("h4",{attrs:{id:"删除线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#删除线"}},[t._v("#")]),t._v(" 删除线")]),t._v(" "),s("p",[t._v("如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 ~~ 即可，实例如下：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNOOB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COM")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("GOOGLE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COM")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("BAIDU")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("COM")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("~")]),t._v("\n")])])]),s("p",[t._v("RUNOOB.COM\nGOOGLE.COM\n"),s("s",[t._v("BAIDU.COM")])]),t._v(" "),s("h4",{attrs:{id:"下划线"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#下划线"}},[t._v("#")]),t._v(" 下划线")]),t._v(" "),s("p",[t._v("下划线可以通过 HTML 的 u 标签来实现：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// <u>带下划线文本</u>")]),t._v("\n")])])]),s("p",[s("u",[t._v("带下划线文本")])]),t._v(" "),s("h4",{attrs:{id:"脚注"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#脚注"}},[t._v("#")]),t._v(" 脚注")]),t._v(" "),s("p",[t._v("脚注是对文本的补充说明。\nMarkdown 脚注的格式如下:")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),t._v("要注明的文本"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),s("p",[t._v("以下实例演示了脚注的用法：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("创建脚注格式类似这样 "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNOOB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("。\n\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("^")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("RUNOOB")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" 菜鸟教程 "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v(" 学的不仅是技术，更是梦想！！！\n")])])]),s("p",[t._v("创建脚注格式类似这样 [^RUNOOB]。")]),t._v(" "),s("p",[t._v("[^RUNOOB]: 菜鸟教程 -- 学的不仅是技术，更是梦想！！！")]),t._v(" "),s("h3",{attrs:{id:"列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表"}},[t._v("#")]),t._v(" 列表")]),t._v(" "),s("p",[t._v("Markdown 支持有序列表和无序列表。")]),t._v(" "),s("p",[t._v("无序列表使用星号(*)、加号(+)或是减号(-)作为列表标记：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 第一项\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 第二项\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 第三项\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 第一项\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 第二项\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 第三项\n\n\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 第一项\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 第二项\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 第三项\n")])])]),s("p",[t._v("效果如下：")]),t._v(" "),s("ul",[s("li",[t._v("第一项")]),t._v(" "),s("li",[t._v("第二项")]),t._v(" "),s("li",[t._v("第三项")])]),t._v(" "),s("ul",[s("li",[t._v("第一项")]),t._v(" "),s("li",[t._v("第二项")]),t._v(" "),s("li",[t._v("第三项")])]),t._v(" "),s("ul",[s("li",[t._v("第一项")]),t._v(" "),s("li",[t._v("第二项")]),t._v(" "),s("li",[t._v("第三项")])]),t._v(" "),s("p",[t._v("有序列表使用数字并加上 . 号来表示，如：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 第一项\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 第二项\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3.")]),t._v(" 第三项\n")])])]),s("ol",[s("li",[t._v("第一项")]),t._v(" "),s("li",[t._v("第二项")]),t._v(" "),s("li",[t._v("第三项")])]),t._v(" "),s("h4",{attrs:{id:"列表嵌套"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表嵌套"}},[t._v("#")]),t._v(" 列表嵌套")]),t._v(" "),s("p",[t._v("列表嵌套只需在子列表中的选项添加四个空格即可：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 第一项：\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 第一项嵌套的第一个元素\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 第一项嵌套的第二个元素\n"),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 第二项：\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 第二项嵌套的第一个元素\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" 第二项嵌套的第二个元素\n")])])]),s("ol",[s("li",[t._v("第一项：\n"),s("ul",[s("li",[t._v("第一项嵌套的第一个元素")]),t._v(" "),s("li",[t._v("第一项嵌套的第二个元素")])])]),t._v(" "),s("li",[t._v("第二项：\n"),s("ul",[s("li",[t._v("第二项嵌套的第一个元素")]),t._v(" "),s("li",[t._v("第二项嵌套的第二个元素")])])])]),t._v(" "),s("h3",{attrs:{id:"区块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区块"}},[t._v("#")]),t._v(" 区块")]),t._v(" "),s("p",[t._v("Markdown 区块引用是在段落开头使用 > 符号 ，然后后面紧跟一个空格符号：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 区块引用\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 菜鸟教程\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 学的不仅是技术更是梦想\n")])])]),s("blockquote",[s("p",[t._v("区块引用\n菜鸟教程\n学的不仅是技术更是梦想")])]),t._v(" "),s("p",[t._v("另外区块是可以嵌套的，一个 > 符号是最外层，两个 > 符号是第一层嵌套，以此类推：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 最外层\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 第一层嵌套\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 第二层嵌套\n")])])]),s("blockquote",[s("p",[t._v("最外层")]),t._v(" "),s("blockquote",[s("p",[t._v("第一层嵌套")]),t._v(" "),s("blockquote",[s("p",[t._v("第二层嵌套")])])])]),t._v(" "),s("h4",{attrs:{id:"区块中使用列表"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#区块中使用列表"}},[t._v("#")]),t._v(" 区块中使用列表")]),t._v(" "),s("p",[t._v("区块中使用列表实例如下：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 区块中使用列表\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.")]),t._v(" 第一项\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2.")]),t._v(" 第二项\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 第一项\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 第二项\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" 第三项\n")])])]),s("blockquote",[s("p",[t._v("区块中使用列表")]),t._v(" "),s("ol",[s("li",[t._v("第一项")]),t._v(" "),s("li",[t._v("第二项")])]),t._v(" "),s("ul",[s("li",[t._v("第一项")]),t._v(" "),s("li",[t._v("第二项")]),t._v(" "),s("li",[t._v("第三项")])])]),t._v(" "),s("h4",{attrs:{id:"列表中使用区块"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#列表中使用区块"}},[t._v("#")]),t._v(" 列表中使用区块")]),t._v(" "),s("p",[t._v("如果要在列表项目内放进区块，那么就需要在 > 前添加四个空格的缩进。")]),t._v(" "),s("p",[t._v("区块中使用列表实例如下：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 第一项\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 菜鸟教程\n    "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" 学的不仅是技术更是梦想\n"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" 第二项\n")])])]),s("ul",[s("li",[t._v("第一项\n"),s("blockquote",[s("p",[t._v("菜鸟教程\n学的不仅是技术更是梦想")])])]),t._v(" "),s("li",[t._v("第二项")])]),t._v(" "),s("h3",{attrs:{id:"代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码"}},[t._v("#")]),t._v(" 代码")]),t._v(" "),s("p",[t._v("如果是段落上的一个函数或片段的代码可以用反引号把它包起来（`），例如：")]),t._v(" "),s("div",{staticClass:"language-javascript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// `printf()` 函数")]),t._v("\n")])])]),s("p",[s("code",[t._v("printf()")]),t._v(" 函数\n代码区块使用 4 个空格或者一个制表符（Tab 键）。\n你也可以用 ``` 包裹一段代码，并指定一种语言（也可以不指定）：")]),t._v(" "),s("h3",{attrs:{id:"链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#链接"}},[t._v("#")]),t._v(" 链接")]),t._v(" "),s("p",[t._v("链接使用方法如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("[链接名称](链接地址)\n\n或者\n\n<链接地址>\n这是一个链接 [菜鸟教程](https://www.runoob.com)\n")])])]),s("p",[t._v("这是一个链接 "),s("a",{attrs:{href:"https://www.runoob.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("菜鸟教程"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("直接使用链接地址：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<https://www.runoob.com>\n")])])]),s("p",[s("a",{attrs:{href:"https://www.runoob.com",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://www.runoob.com"),s("OutboundLink")],1)]),t._v(" "),s("h4",{attrs:{id:"高级链接"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#高级链接"}},[t._v("#")]),t._v(" 高级链接")]),t._v(" "),s("p",[t._v("我们可以通过变量来设置一个链接，变量赋值在文档末尾进行：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("这个链接用 1 作为网址变量 [Google][1]\n这个链接用 runoob 作为网址变量 [Runoob][runoob]\n然后在文档的结尾为变量赋值（网址）\n\n  [1]: http://www.google.com/\n  [runoob]: http://www.runoob.com/\n")])])]),s("p",[t._v("这个链接用 1 作为网址变量 "),s("a",{attrs:{href:"http://www.google.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Google"),s("OutboundLink")],1),t._v("\n这个链接用 runoob 作为网址变量 "),s("a",{attrs:{href:"http://www.runoob.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Runoob"),s("OutboundLink")],1),t._v("\n然后在文档的结尾为变量赋值（网址）")]),t._v(" "),s("h3",{attrs:{id:"图片"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图片"}},[t._v("#")]),t._v(" 图片")]),t._v(" "),s("p",[t._v("Markdown 图片语法格式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('![alt 属性文本](图片地址)\n\n![alt 属性文本](图片地址 "可选标题")\n')])])]),s("p",[t._v("开头一个感叹号 !\n接着一个方括号，里面放上图片的替代文字\n接着一个普通括号，里面放上图片的网址，最后还可以用引号包住并加上选择性的 'title' 属性的文字。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png)\n\n![RUNOOB 图标](http://static.runoob.com/images/runoob-logo.png "RUNOOB")\n')])])]),s("p",[s("img",{attrs:{src:"http://static.runoob.com/images/runoob-logo.png",alt:"RUNOOB 图标"}})]),t._v(" "),s("p",[s("img",{attrs:{src:"http://static.runoob.com/images/runoob-logo.png",alt:"RUNOOB 图标",title:"RUNOOB"}})]),t._v(" "),s("p",[t._v("当然，你也可以像网址那样对图片网址使用变量:")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("这个链接用 1 作为网址变量 [RUNOOB][1].\n然后在文档的结尾为变量赋值（网址）\n\n[1]: http://static.runoob.com/images/runoob-logo.png\n")])])]),s("p",[t._v("这个链接用 1 作为网址变量 "),s("a",{attrs:{href:"http://www.google.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("RUNOOB"),s("OutboundLink")],1),t._v(".\n然后在文档的结尾为变量赋值（网址）")]),t._v(" "),s("p",[t._v("Markdown 还没有办法指定图片的高度与宽度，如果你需要的话，你可以使用普通的 "),s("img"),t._v(" 标签。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<img src="http://static.runoob.com/images/runoob-logo.png" width="50%">\n')])])]),s("img",{attrs:{src:"http://static.runoob.com/images/runoob-logo.png",width:"50%"}}),t._v(" "),s("h3",{attrs:{id:"表格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#表格"}},[t._v("#")]),t._v(" 表格")]),t._v(" "),s("p",[t._v("Markdown 制作表格使用 | 来分隔不同的单元格，使用 - 来分隔表头和其他行。")]),t._v(" "),s("p",[t._v("语法格式如下：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("|  表头   | 表头  |\n|  ----  | ----  |\n| 单元格  | 单元格 |\n| 单元格  | 单元格 |\n")])])]),s("table",[s("thead",[s("tr",[s("th",[t._v("表头")]),t._v(" "),s("th",[t._v("表头")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("单元格")]),t._v(" "),s("td",[t._v("单元格")])]),t._v(" "),s("tr",[s("td",[t._v("单元格")]),t._v(" "),s("td",[t._v("单元格")])])])]),t._v(" "),s("p",[t._v("对齐方式")]),t._v(" "),s("p",[t._v("我们可以设置表格的对齐方式：")]),t._v(" "),s("p",[t._v("-: 设置内容和标题栏居右对齐。\n:- 设置内容和标题栏居左对齐。\n:-: 设置内容和标题栏居中对齐。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("| 左对齐 | 右对齐 | 居中对齐 |\n| :-----| ----: | :----: |\n| 单元格 | 单元格 | 单元格 |\n| 单元格 | 单元格 | 单元格 |\n")])])]),s("table",[s("thead",[s("tr",[s("th",{staticStyle:{"text-align":"left"}},[t._v("左对齐")]),t._v(" "),s("th",{staticStyle:{"text-align":"right"}},[t._v("右对齐")]),t._v(" "),s("th",{staticStyle:{"text-align":"center"}},[t._v("居中对齐")])])]),t._v(" "),s("tbody",[s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("单元格")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("单元格")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("单元格")])]),t._v(" "),s("tr",[s("td",{staticStyle:{"text-align":"left"}},[t._v("单元格")]),t._v(" "),s("td",{staticStyle:{"text-align":"right"}},[t._v("单元格")]),t._v(" "),s("td",{staticStyle:{"text-align":"center"}},[t._v("单元格")])])])]),t._v(" "),s("h2",{attrs:{id:"html"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#html"}},[t._v("#")]),t._v(" HTML")]),t._v(" "),s("h2",{attrs:{id:"css"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),s("h2",{attrs:{id:"js"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#js"}},[t._v("#")]),t._v(" JS")]),t._v(" "),s("h2",{attrs:{id:"vue基础"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue基础"}},[t._v("#")]),t._v(" Vue基础")]),t._v(" "),s("h3",{attrs:{id:"vue-js是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue-js是什么"}},[t._v("#")]),t._v(" Vue.js是什么")]),t._v(" "),s("blockquote",[s("p",[t._v("vue是一套用于构建用户界面的渐进式框架。与其它大型框架不同的是，Vue 被设计为可以自底向上逐层应用。Vue 的核心库只关注视图层，不仅易于上手，还便于与第三方库或既有项目整合。另一方面，当与现代化的工具链以及各种支持类库结合使用时，Vue 也完全能够为复杂的单页应用提供驱动。")])]),t._v(" "),s("h3",{attrs:{id:"vue实例"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue实例"}},[t._v("#")]),t._v(" Vue实例")]),t._v(" "),s("p",[t._v("Vue.js 的核心是一个允许采用简洁的模板语法来声明式地将数据渲染进 DOM 的系统\n1、在文件中引入vue.js，下面两种方式选择其中一种")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<script type="text/javascript" src="../vue.js"><\/script>\n\x3c!-- 开发环境版本，包含了有帮助的命令行警告 --\x3e\n<script src="https://cdn.jsdelivr.net/npm/vue/dist/vue.js"><\/script>\n')])])]),s("p",[t._v("2、建立简单的vue实例对象")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<div id="app">\n\t//调用vue中的数据\n\t<h1>{{message}}</h1>\n\t//下面的两种书写方式结果相同\n\t<button v-on:click="click()">click</button>\n\t<button @click="click()">click01</button>\n</div>\n\n<script>\n\t\tvar ve=\tnew Vue({\n\t\t\t\tel:\'#app\',\n\t\t\t\tdata:{\n\t\t\t\t\tmessage:\'hello\',\n\t\t\t\t},\n\t\t\t\tmethods:{\n\t\t\t\t\tclick:function(){\n\t\t\t\t\t\talert("你好，世界");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n<\/script>\n\n')])])]),s("h3",{attrs:{id:"vue常用指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue常用指令"}},[t._v("#")]),t._v(" vue常用指令")]),t._v(" "),s("p",[t._v("1、v-on：绑定事件监听器，事件的类型由参数决定\n例如：v-on：事件名称\n或者@事件名称")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[s("span",{pre:!0,attrs:{class:"token namespace"}},[t._v("v-on:")]),t._v("click")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("click()"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("点击"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("button")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("@click")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("click()"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("点击"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("button")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("2、v-if/v-else-if/v-else判断指令：根据表达式的值，进行渲染")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<div id="app">\n\t\t\t//isshow为true时，标签内的内容显示到页面\n\t\t\t<h1 v-if="isshow">{{isshow}}ok</h1>\n</div>\n\n<script>\n\t\t\tnew Vue({\n\t\t\t\tel:\'#app\',\n\t\t\t\tdata:{\n\t\t\t\t\tmessage:\'hello\',\n\t\t\t\t\tisshow:true,\n\t\t\t\t},\n\t\t\t\tmethods:{\n\t\t\t\t\tclick:function(){\n\t\t\t\t\t\talert("你好，世界");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n<\/script>\n\n')])])]),s("p",[t._v("3、v-model：数据绑定指令（一般为表单输入绑定）")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('//v-model 指令在表单<input>、<textarea> 及 <select> 元素上创建双向数据绑定\n<input type="text" v-model="message" />{{message}}\n')])])]),s("p",[t._v("4、v-for：循环（可以多层嵌套显示和java中的for循环原理一致）\nv-for格式：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<li v-for=“item in items”>{{item}} </ li>\n")])])]),s("p",[t._v("其中：item是被迭代数组元素的别名\nitems是源数据数组\n使用 item in items 的特殊格式语法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<div id="demo">\n\t<ul>\n\t\t<li v-for="item in items">{{item}}</li>\n\t\t<li v-for="item in arr1">{{item}}</li>\n\t\t<li v-for="item in arr1.a">{{item}}</li>\n\t</ul>\n</div>\n<script>\n\t\t\tnew Vue({\n\t\t\t\tel:\'#demo\',\n\t\t\t\tdata:{\n\t\t\t\t\titems:[23,23,344,45],\n\t\t\t\t\tarr1:{"a":[1,2,3],"b":[2,2,3]},\n\t\t\t\t},\n\t\t\t\tmethods:{\n\t\t\t\t}\n\t\t\t});\n<\/script>\n')])])]),s("p",[t._v("5、v-bind：动态绑定属性\n使用格式\nv-bind:属性名=“data数据对象中的值”\n简写\n：属性名=“data数据对象中的值”")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<styple>\n.child{\n\twidth: 50px;\n\theight: 50px;\n\tbackground-color: gray;\n\tcolor: black;\n\t}\n</style>\n<div id=\"app\">\n\t<img v-bind:src=\"img\" /> //动态绑定了imges属性，img改变了图片，那么img标签也会改变\n\t<div :class=\"{'child':isshow}\">div6</div> //div区域的显示根据isshow的值来判定\n\t\n</div>\n<script>\n\tnew Vue({\n\t\t\t\tel:'#app',\n\t\t\t\tdata:{\n\t\t\t\tisshow:true,\n\t\t\t\timg:'111.png',\n\t\t\t\t}\n\t\t\t})\t\n<\/script>\n")])])]),s("h3",{attrs:{id:"生命周期函数-钩子函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#生命周期函数-钩子函数"}},[t._v("#")]),t._v(" 生命周期函数|钩子函数")]),t._v(" "),s("p",[t._v("1、生命周期函数")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("beforeCreate\n\n在实例初始化之后，数据观测(data observer) 和 event/watcher 事件配置之前被调用。\n\ncreated\n\n实例已经创建完成之后被调用。在这一步，实例已完成以下的配置：数据观测(data observer)，属性和方法的运算， watch/event 事件回调。然而，挂载阶段还没开始，$el 属性目前不可见。\n\nbeforeMount\n\n在挂载开始之前被调用：相关的 render 函数首次被调用。\n\nmounted\n\nel 被新创建的 vm.$el 替换，并挂载到实例上去之后调用该钩子。\n\nbeforeUpdate\n\n数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁之前。 你可以在这个钩子中进一步地更改状态，这不会触发附加的重渲染过程。\n\nupdated\n\n由于数据更改导致的虚拟 DOM 重新渲染和打补丁，在这之后会调用该钩子。\n\n当这个钩子被调用时，组件 DOM 已经更新，所以你现在可以执行依赖于 DOM 的操作。然而在大多数情况下，你应该避免在此期间更改状态，因为这可能会导致更新无限循环。\n\n该钩子在服务器端渲染期间不被调用。\n\nbeforeDestroy\n\n实例销毁之前调用。在这一步，实例仍然完全可用。\n\ndestroyed\n\nVue 实例销毁后调用。调用后，Vue 实例指示的所有东西都会解绑定，所有的事件监听器会被移除，所有的子实例也会被销毁。 该钩子在服务器端渲染期间不被调用。\n")])])]),s("p",[s("img",{attrs:{src:"/lifecycle.png",alt:"alt 生命周期",title:"生命周期"}})]),t._v(" "),s("p",[t._v("2、下面用一个生命周期函数演示的实例")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<div id=\"demo\">\n\t\t\t<h1>{{message}}</h1>\n\t\t\t<button @click=\"changemessage()\">changemessage</button>\n</div>\n<script>\n\t\t\tvar ve =new Vue({\n\t\t\t\t\tel:'#demo',\n\t\t\t\t\tdata:{\n\t\t\t\t\t\tmessage:'vue生命周期',\n\t\t\t\t\t\t\n\t\t\t\t\t},\n\t\t\t\t\tbeforeCreate:function(){\n\t\t\t\t\t\tconsole.group(\"------------beforecreate-----------\")\n\t\t\t\t\t\tconsole.log('el:'+this.$el)\n\t\t\t\t\t\tconsole.log('data:'+this.$data)\n\t\t\t\t\t\tconsole.log('message:'+this.message)\n\t\t\t\t\t},\n\t\t\t\t\tcreated:function(){\n\t\t\t\t\t\tconsole.group(\"------------created-----------\")\n\t\t\t\t\t\tconsole.log('el:'+this.$el)\n\t\t\t\t\t\tconsole.log('data:'+this.$data)\n\t\t\t\t\t\tconsole.log('message:'+this.message)\n\t\t\t\t\t},\n\t\t\t\t\tbeforeMount:function(){\n\t\t\t\t\t\tconsole.group(\"------------beforemount-----------\")\n\t\t\t\t\t\tconsole.log('el:'+this.$el)\n\t\t\t\t\t\tconsole.log('data:'+this.$data)\n\t\t\t\t\t\tconsole.log('message:'+this.message)\n\t\t\t\t\t},\n\t\t\t\t\tmounted:function(){\n\t\t\t\t\t\tconsole.group(\"------------mounted-----------\")\n\t\t\t\t\t\tconsole.log('el:'+this.$el)\n\t\t\t\t\t\tconsole.log('data:'+this.$data)\n\t\t\t\t\t\tconsole.log('message:'+this.message)\n\t\t\t\t\t},\n\t\t\t\t\tbeforeUpdate:function(){\n\t\t\t\t\t\tconsole.group(\"------------beforeupdate-----------\")\n\t\t\t\t\t\tconsole.log('el:'+this.$el)\n\t\t\t\t\t\tconsole.log('data:'+this.$data)\n\t\t\t\t\t\tconsole.log('message:'+this.message)\n\t\t\t\t\t},\n\t\t\t\t\tupdated:function(){\n\t\t\t\t\t\tconsole.group(\"------------updated-----------\")\n\t\t\t\t\t\tconsole.log('el:'+this.$el)\n\t\t\t\t\t\tconsole.log('data:'+this.$data)\n\t\t\t\t\t\tconsole.log('message:'+this.message)\n\t\t\t\t\t},\n\t\t\t\t\tbeforeDestroy:function(){\n\t\t\t\t\t\tconsole.group(\"------------destotry-----------\")\n\t\t\t\t\t\tconsole.log('el:'+this.$el)\n\t\t\t\t\t\tconsole.log('data:'+this.$data)\n\t\t\t\t\t\tconsole.log('message:'+this.message)\n\t\t\t\t\t},\n\t\t\t\t\tdestroyed:function(){\n\t\t\t\t\t\tconsole.group(\"------------destroyed-----------\")\n\t\t\t\t\t\tconsole.log('el:'+this.$el)\n\t\t\t\t\t\tconsole.log('data:'+this.$data)\n\t\t\t\t\t\tconsole.log('message:'+this.message)\n\t\t\t\t\t},\n\t\t\t\t\tmethods:{\n\t\t\t\t\t\tchangemessage:function(){\n\t\t\t\t\t\t\tthis.message='666'\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n//销毁是在实例外面调用的\n\t\t\t\tve.$destroy()\n")])])]),s("p",[t._v("实际效果\n"),s("img",{attrs:{src:"/lifecycleshow01.png",alt:"alt 生命周期实际效果",title:"生命周期实际效果"}}),t._v("\n点击changemessage按钮\n"),s("img",{attrs:{src:"/lifecycleshow02.png",alt:"alt 生命周期实际效果",title:"生命周期实际效果"}})]),t._v(" "),s("h3",{attrs:{id:"vue组件化应用构建"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue组件化应用构建"}},[t._v("#")]),t._v(" vue组件化应用构建")]),t._v(" "),s("p",[t._v("组件系统是 Vue 的另一个重要概念，因为它是一种抽象，允许我们使用小型、独立和通常可复用的组件构建大型应用。仔细想想，几乎任意类型的应用界面都可以抽象为一个组件树：\n"),s("img",{attrs:{src:"/components.png.png",alt:"alt 组件化",title:"组件化"}}),t._v("\n1、为什么使用组件？\n使用组件一方面可以不用去直接修改标签，另一方面也会优化页面显示\n注意:组件在实例前面书写\n2、组件注册（全局与局部）")]),t._v(" "),s("h5",{attrs:{id:"先看看全局组件的引用，就拿最常用的全局的暂无数据来举例，看看全局的是如何实现的。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#先看看全局组件的引用，就拿最常用的全局的暂无数据来举例，看看全局的是如何实现的。"}},[t._v("#")]),t._v(" 先看看全局组件的引用，就拿最常用的全局的暂无数据来举例，看看全局的是如何实现的。")]),t._v(" "),s("p",[t._v("（1）首先在components创建一个公共的目录，NoDatas目录里边包含index.vue和index.js,index.vue用来写公共的页面，index.js用来导出这个组件。")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<template>\n\x3c!-- NoDataWords 可以灵活控制每个页面显示的内容  --\x3e\n\x3c!-- NoDataHeight 可以灵活控制每个页面的高度  --\x3e\n\x3c!-- 如果你的页面都是统一的字体，统一的样式,那就直接在这写死就好了 --\x3e\n    <div class="NoDataAtAll W100"\n         :style="{height: NoDataHeight }">{{NoDataWords}}</div>\n</template>\n<script>\nexport default {\n  // 就是基本的父子组件传值\n  props: ["NoDataHeight", "NoDataWords"],\n  data() {\n    return {};\n  },\n  methods: {}\n};\n<\/script>\n<style lang="scss" scoped>\n.NoDataAtAll {\n  font-size: 14px;\n  color: #909399;\n}\n</style>\n')])])]),s("p",[t._v("(2) 然后就是在index.js中注册该组件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import NoDataS from './index.vue'\nconst noDataLists = {\n    install: function(Vue) {\n        // 注册并获取组件，然后在main.js中引用，在Vue.use()就可以了\n        Vue.component('noDataLists', NoDataS)\n    }\n}\nexport default noDataLists\n")])])]),s("p",[t._v("(3)在main.js中引入并使用该组件")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import noDataLists from '@/components/NoDatas/index'\nVue.use(noDataLists);\n")])])]),s("h5",{attrs:{id:"第二种-全局注册组件形式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#第二种-全局注册组件形式"}},[t._v("#")]),t._v(" 第二种 全局注册组件形式")]),t._v(" "),s("p",[s("img",{attrs:{src:"/allzuchezujian01.png",alt:"alt 全局注册组件",title:"全局注册组件"}}),t._v("\n先在main.js里这样写。  然后在App.vue里面 的template模板里 直接使用")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<users></users>\n")])])]),s("p",[t._v("加载使用即可\n"),s("img",{attrs:{src:"/allzuchezujian02.png",alt:"alt 全局注册组件",title:"全局注册组件"}}),t._v("\n局部组件引入方法 就是在App.vue里引入。\n"),s("img",{attrs:{src:"/allzuchezujian03.png",alt:"alt 局部注册组件",title:"局部注册组件"}}),t._v("\n2,.全局注册公共的函数\n公共函数common.js")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("const obj={\n    fun1(){\n    },\n    fun2(){\n    },\n    fun3(){\n    }\n}\nexport default obj\n")])])]),s("p",[t._v("main.js中引入方法")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("import common from '.icommon.js'\nVue.prototype.common=comm\n")])])]),s("p",[t._v("其它组件中调用该方法的时候")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("this.common.fun1();\n")])])]),s("h4",{attrs:{id:"局部组件-局部组件放在实例中"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#局部组件-局部组件放在实例中"}},[t._v("#")]),t._v(" 局部组件:局部组件放在实例中")]),t._v(" "),s("p",[t._v("父子组件可以嵌套使用\n父子组件间作用域相互独立\n子组件只能在父组件的模板中进行调用")]),t._v(" "),s("p",[t._v("子组件是父组件细化拆分的过程\n父组件向子组件传值通过props进行")]),t._v(" "),s("p",[t._v("下面的示例中包含了父组件向子组件传值的功能")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<div id=\"box\">\n\t<test>\n\t</test>\n</div>\n<template id='box1'>\n\t<div>\n\t<input type=\"text\" v-model=\"message\" />\n\t<box1 num=\"1\" txt='yi' :msg=\"message\"></box1>\n\t<box1 num=\"2\" txt='er' :msg=\"message\"></box1>\n\t</div>\n</template> \n\n<script>\nvar ve = new Vue({\n\t\tel:'#box',\n\t\tdata:{\n\t\t},\n\t\t//父級\n\t\tcomponents:{\n\t\t\t'test':{\n\t\t\t\ttemplate:\"#box1\",\n\t\t\t\tdata:function(){\n\t\t\t\t\treturn{\n\t\t\t\t\t\tmessage:'aaa'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\t//子级\n\t\t\t\tcomponents:{\n\t\t\t\t\t'box1':{\n\t\t\t\t\t\ttemplate:\"#box2\",\n\t\t\t\t\t\t//子级想将父级的一个值，作为自己的一个局部变量\n\t\t\t\t\t\tdata:function(){\n\t\t\t\t\t\t\treturn{\n\t\t\t\t\t\t\t\tmymsg:this.msg\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\t//计算属性\n\t\t\t\t\t\tcomputed:{\n\t\t\t\t\t\t\tmymsg1:function(){\n\t\t\t\t\t\t\t\treturn this.msg+'!'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tprops:[\n\t\t\t\t\t\t\t'num','txt','msg'\n\t\t\t\t\t\t]\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t})\n<\/script>\n")])])]),s("h4",{attrs:{id:"自定义监听事件（子组件向父组件传值）"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#自定义监听事件（子组件向父组件传值）"}},[t._v("#")]),t._v(" 自定义监听事件（子组件向父组件传值）")]),t._v(" "),s("p",[t._v("自定义监听事件： $emit()\n传值的过程：\n子组件设定了一个点击事件，点击事件中夹带着传递的值—》通过getval方法将拿到的值赋值给父组件的message—》父组件显示出message值")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<div id=\"box\">\n\t\t\t<parent></parent>\n</div>\n\t<template id='par'>\n\t\t<div>\n\t\t\t<h1> 父组件:{{parentmsg}}||{{message}}</h1>\n\t\t\t<child @change=\"getval\"></child>\n\t\t</div>\n\t</template>\n\t<template id='child'>\n\t\t<div @click=\"fn()\">\n\t\t\t<h2>子组件:{{childmsg}}</h2>\n\t\t</div>\n\t</template>\n<script>\n\tvar vm = new Vue({\n\t\tel:\"#box\",\n\t\tcomponents:{\n\t\t\t\"parent\":{\n\t\t\t\ttemplate:'#par',\n\t\t\t\tdata:function(){\n\t\t\t\t\treturn {\n\t\t\t\t\t\tparentmsg:\"父组件的信息\",\n\t\t\t\t\t\tmessage:''\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tmethods:{\n\t\t\t\t\tgetval:function(val){\n\t\t\t\t\t\tthis.message = val\n\t\t\t\t\t\tconsole.log(val)\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcomponents:{\n\t\t\t\t\t'child':{\n\t\t\t\t\t\ttemplate:'#child',\n\t\t\t\t\t\tdata:function(){\n\t\t\t\t\t\t\treturn{\n\t\t\t\t\t\t\t\tchildmsg:'子组件的信息'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tmethods:{\n\t\t\t\t\t\t\tfn:function(){\n\t\t\t\t\t\t\t\tthis.$emit('change',this.childmsg)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t})\n<\/script>\n\n")])])]),s("h3",{attrs:{id:"slot插槽"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#slot插槽"}},[t._v("#")]),t._v(" SLOT插槽")]),t._v(" "),s("p",[t._v("目的:其目的在于让组件的可扩展性更强,用来混合父组件的内容与子组件自己的模板.\n分为匿名slot和具名slot\n一、slot的作用\nQ: 假如父组件需要在子组件内放一些DOM元素，那么这些DOM是显示呢还是不显示呢？")]),t._v(" "),s("p",[t._v("默认情况下是不会显示的，如下图所示，页面并没有显示父组件增加的"),s("span",[t._v("我是魔鬼")]),t._v("  元素内容。那么我执意要加DOM元素到子组件上该怎么实现呢？这就用到了slot插槽，使用slot这个标签可以将父组件放在子组件的内容，放到它想显示的地方")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<div id="app">  \n  <children>  \n    <span>我是魔鬼</span>  \n    \x3c!--上面这行不会显示--\x3e  \n  </children>  \n</div>  \n<script>  \n  var vm = new Vue({  \n      el: \'#app\',  \n      components: {  \n         children: {   \n         template: "<h1>我是子组件</h1>"  \n       }  \n     }  \n  });  \n<\/script>  \n')])])]),s("p",[t._v("二、简单理解slot\n通俗易懂的讲，slot具有“占坑”的作用，在子组件占好了位置，那父组件使用该子组件标签时，新添加的DOM元素就会自动填到这个坑里面")]),t._v(" "),s("p",[t._v("三、单个slot    \n我们将上面的代码改一改 , 给child组件添加slot插槽，那么父组件的添加的DOM元素就填充到这个slot插槽里面了")]),t._v(" "),s("p",[t._v("注意：如果有多个DOM元素，会一起插入到")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<slot></slot>\n")])])]),s("p",[t._v("这个标签内")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<div id="app">  \n  <children>  \n    <span>我是魔鬼</span>  \n    \x3c!--上面这行会显示在 “我是子组件” 数据后面--\x3e  \n  </children>  \n</div>  \n<script>  \n  var vm = new Vue({  \n      el: \'#app\',  \n      components: {  \n         children: {   \n         template: "<h1>我是子组件</h1><slot></slot>"  \n       }  \n     }  \n  });  \n<\/script>  \n')])])]),s("p",[t._v("四、具名插槽\n现在我们需要将父组件添加的HTML标签放在子组件里的不同位置。具名插槽实现：先在子组件对应分发slot标签里，添加name=”name名” 属性，其次父组件在要分发的标签里添加 slot=”name名” 属性，然后就会将对应的标签放在对应的位置了。")]),t._v(" "),s("p",[t._v("简单理解就是：给子组件占的每一个坑取名，将父组件添加的HTML元素添加到指定名字的坑，就实现了分发内容在不同位置显示")]),t._v(" "),s("p",[t._v("【Child组件模板】")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<template>\n  <div>\n    <slot name="header"></slot>\n    <h1>我是子组件</h1>\n    <slot name="footer"></slot>\n  </div>\n</template>\n')])])]),s("p",[t._v("【父组件引用Child组件】")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<Child>\n  <span slot="header">我是header</span>\n  <span slot="footer">我是footer</span>\n</Child>\n')])])]),s("p",[t._v("会显示成：")]),t._v(" "),s("blockquote",[s("p",[t._v("我是header\n我是子组件\n我是footer\n五、编辑作用域\n父组件模板的内容在父组件作用域内编译；子组件模板的内容在子组件作用域内编译")])]),t._v(" "),s("p",[t._v("【Child组件模板】")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<template>\n  <div>\n    <slot name="header"></slot>\n    <h1>{{msg}}</h1>\n    <slot></slot>\n    <slot name="footer"></slot>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      msg: \'我是子组件里面的内容\'\n    }\n  }\n}\n<\/script>\n')])])]),s("p",[t._v("【父组件引用Child组件】")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('<template>\n  <Child>\n    <span slot="header">我是header</span>\n    <h1>{{msg}}</h1>\n    <span slot="footer">我是footer</span>\n  </Child>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      msg: \'我是父组件的内容\'\n    }\n  }\n}\n<\/script>\n')])])]),s("p",[t._v('六、解构slot-scope\n在子组件中插槽中通过：data绑定了数据，父组件可以通过slot-scope="name"来取得子组件作用域插槽：\ndata绑定的数据，name的名称可以随便取，用来定义对象来代替取到的data数据。')]),t._v(" "),s("p",[t._v("【Child组件模板】")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<template>\n  <div>\n    <slot :data=\"data\"></slot>\n  </div>\n</template>\n<script>\nexport default {\n  data() {\n    return {\n      data: ['Neinei','Laoba','Demi','Feiyan']\n    }\n  }\n}\n<\/script>\n")])])]),s("p",[t._v("【父组件引用Child组件】")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('  <template>\n    \x3c!-- 循环数据列表 --\x3e\n    <Child>\n      <div slot-scope="msg">\n        <span v-for="item in msg.data">{{item}} </span>\n      </div>\n    </Child>\n \n    \x3c!-- 直接显示数据 --\x3e\n    <Child>\n      <div slot-scope="msg">\n        <span>{{msg.data}} </span>\n      </div>\n    </Child>\n \n    \x3c!-- 不使用其提供的数据, 作用域插槽退变成匿名插槽 --\x3e\n    <Child>\n      <div>我是插槽</div>\n    </Child>\n  </template>\n')])])]),s("p",[t._v("显示为：")]),t._v(" "),s("blockquote",[s("p",[t._v("Neinei Laoba Demi Feiyan\n['Neinei','Laoba','Demi','Feiyan']\n我是插槽")])]),t._v(" "),s("h3",{attrs:{id:"vue的路由设置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue的路由设置"}},[t._v("#")]),t._v(" vue的路由设置")]),t._v(" "),s("p",[t._v("要引入vue-router.js库文件\n作用：\n根据url锚点的位置，在容器中加载不同的模块，本质是作为页面导航\n完成SPA(Singal Page Application)的开发\n一种特殊的web应用，它将所有活动局限于一个web页面中，仅web页面初始化时加载项应的html、JavaScript、css\n一旦页面加载完成，SPA不会因为用户的操作而进行页面的重新加载或跳转，而是利用JavaScript动态的变换HTML（采用的是div切换显示或隐藏），从而实现ui与用户的交互\n下面是一个简单地单页面示例")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("<div id=\"app\">\n\t<ul>\n\t\t<li >\n\t\t\t<router-link to=\"/home\">首页</router-link>\n\t\t</li>\n\t\t<li >\n\t\t\t<router-link to=\"/news\">新闻</router-link>\n\t\t</li>\n\t\t<li >\n\t\t\t<router-link to=\"/hot\">热点</router-link>\n\t\t</li>\n\t</ul>\n\t<div class=\"show\">\n\t\t<router-view></router-view>\n\t</div>\n\t<button @click=\"back()\">go back</button>\n</div>\n<script>\n\t\tconst Home={template:'<h2>首页</h2>'}\n\t\tconst News={template:'<h2>新闻</h2>'}\n\t\tconst Hot={template:'<h2>热点</h2>'}\n\t\t//Vue.extend(template:'<h1>首页</h1>')\n\t\t//配置路径\n\t\tconst routes=[\n\t\t\t{\n\t\t\t\tpath:'/home',component:Home\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath:'/news',component:News\n\t\t\t},\n\t\t\t{\n\t\t\t\tpath:'/hot',component:Hot\n\t\t\t}\n\t\t]\n\t\t\n\t\t//创建router\n\t\tconst router = new VueRouter({\n\t\t\troutes\n\t\t})\n\t\t\n\t\tvar vm = new Vue({\n\t\t\tel:'#app',\n\t\t\trouter,\n\t\t\tbeforeCreate:function(){\n\t\t\t\tthis.$router.push('/home').catch(err=>{err})\n\t\t\t},\n\t\t\tmethods:{\n\t\t\t\tback(){\n\t\t\t\t\tthis.$router.go(-1);\n\t\t\t\t}\n\t\t\t}\n\t\t})\n<\/script>\n")])])]),s("p",[t._v("二级路由的配置是在一级路由的基础上，在某一个path下再分离出几个低级的path\n示例")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("{\n\t//新闻模块下有将新闻进行分类：科技、军事等；其他步骤不影响\n\tpath:'/news',component:News,\n\tchildren:[\n\t\t/* 二级路由，path分配，前面没有“ / ” */\n\t\t{\n\t\t\tpath:'js',\n\t\t\tcomponent:{\n\t\t\t\ttemplate:'<p>军事类新闻</p>'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\tpath:'kj',\n\t\t\tcomponent:{\n\t\t\t\ttemplate:'<p>科技类新闻</p>'\n\t\t\t}\n\t\t},\n\t\t{\n\t\t\t/* 默认页面可以直接用一个组件，也可以重定向 */\n\t\t\tpath:'/',\n\t\t\tredirect:'js'\n\t\t\t// component:{\n\t\t\t// \ttemplate:'<p>默认值</p>'\n\t\t\t// }\n\t\t}\n\t]\n},\n\n")])])]),s("h3",{attrs:{id:"axios的使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#axios的使用"}},[t._v("#")]),t._v(" axios的使用")]),t._v(" "),s("p",[t._v("axios的get方法使用\naxios相关使用\n一、axios安装\n使用npm安装axios")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("\tnpm install axios\n")])])]),s("p",[t._v("使用cnpm安装axios")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("\tcnpm install axios\n")])])]),s("p",[t._v("使用yarn安装axios")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("\tyarn install axios\n")])])]),s("p",[t._v("使用cdn链接axios")]),t._v(" "),s("div",{staticClass:"language-vue extra-class"},[s("pre",{pre:!0,attrs:{class:"language-vue"}},[s("code",[t._v("\t"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("script")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://unpkg.com/axios/dist/axios.min.js"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token script"}}),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),s("p",[t._v("二、请求数据方法")]),t._v(" "),s("ul",[s("li",[t._v("get请求：方式一：")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("axios({\n\t\t// 默认请求方式为get\n\t\tmethod: 'get',\n\t\turl: 'api',\n\t\t// 传递参数\n\t\tparams: {\n\t\t\tkey: value\n\t\t},\n\t\t// 设置请求头信息\n\t\theaders: {\n\t\t\tkey: value\n\t\t}\n\t\tresponseType: 'json'\n\t}).then(response => {\n\t\t// 请求成功\n\t\tlet res = response.data;\n\t\tconsole.log(res);\n\t}).catch(error => {\n\t\t// 请求失败，\n\t\tconsole.log(error);\n\t});\n")])])]),s("ul",[s("li",[t._v("get请求：方式二")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('axios.get("api", {\n\t\t// 传递参数\n\t\tparams: {\n\t\t\tkey: value\n\t\t},\n\t\t// 设置请求头信息，可以传递空值\n\t\theaders: {\n\t\t\tkey: value\n\t\t}\n\t}).then(response => {\n\t\t// 请求成功\n\t\tlet res = response.data;\n\t\tconsole.log(res);\n\t}).catch(error => {\n\t\t// 请求失败，\n\t\tconsole.log(error);\n\t});\n')])])]),s("ul",[s("li",[t._v("post请求：方式一")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("// 注：post请求方法有的要求参数格式为formdata格式，此时需要借助 Qs.stringify()方法将对象转换为字符串\n\tlet obj = qs.stringify({\n\t\tkey: value\n\t});\n\t\n\taxios({\n\t\tmethod: 'post',\n\t\turl: 'api',\n\t\t// 传递参数\n\t\tdata: obj,\n\t\t// 设置请求头信息\n\t\theaders: {\n\t\t\tkey: value\n\t\t}\n\t\tresponseType: 'json'\n\t}).then(response => {\n\t\t// 请求成功\n\t\tlet res = response.data;\n\t\tconsole.log(res);\n\t}).catch(error => {\n\t\t// 请求失败，\n\t\tconsole.log(error);\n\t});\n")])])]),s("ul",[s("li",[t._v("post请求：方式二")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v('let data = {\n\t\t\tkey: value\n\t\t},\n\t\theaders = {\n\t\t\tUSERID: "",\n\t\t\tTOKEN: ""\n\t\t};\n\t// 若无headers信息时，可传空对象占用参数位置\n\taxios.post("api", qs.stringify(data), {\n\t\theaders\n\t}\n\t}).then(response => {\n\t\t// 请求成功\n\t\tlet res = response.data;\n\t\tconsole.log(res);\n\t}).catch(error => {\n\t\t// 请求失败，\n\t\tconsole.log(error);\n\t});\n')])])]),s("ul",[s("li",[t._v("Qs的使用\n引用cdn或者使用npm、cnpm或者yarn进行插件安装\n使用cdn时，默认全局变量为Qs\nQs基本方法使用\nqs.stringify() 方法：将目标数据转换为string字符串\nqs.parse() 方法：将对象字符串格式的数据转换为对象格式")])]),t._v(" "),s("h2",{attrs:{id:"vue技术点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue技术点"}},[t._v("#")]),t._v(" Vue技术点")]),t._v(" "),s("h3",{attrs:{id:"vue导出json数据到excel表格"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#vue导出json数据到excel表格"}},[t._v("#")]),t._v(" Vue导出json数据到Excel表格")]),t._v(" "),s("p",[t._v("一、安装依赖")]),t._v(" "),s("div",{staticClass:"language-JavaScript extra-class"},[s("pre",{pre:!0,attrs:{class:"language-javascript"}},[s("code",[t._v("npm install file"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("saver "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save\nnpm install xlsx "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save\nnpm install script"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("loader "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),t._v("save"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("dev\n")])])]),s("p",[t._v("二、下载两个所需要的js文件Blob.js和 Export2Excel.js。")]),t._v(" "),s("p",[t._v("文件地址")]),t._v(" "),s("p",[t._v("三、src目录下新建vendor文件夹，将Blob.js和 Export2Excel.js放进去。")]),t._v(" "),s("p",[t._v("四、更改webpack.base.conf.js配置")]),t._v(" "),s("p",[t._v("在resolve的alias：")]),t._v(" "),s("p",[t._v("'vendor': path.resolve(__dirname, '../src/vendor')\n五、在.vue文件中 script部分：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("data(){\n  return{\n    list:[\n        {\n          name:'韩版设计时尚风衣大',\n          number:'MPM00112',\n          salePrice:'￥999.00',\n          stocknums:3423,\n          salesnums:3423,\n          sharenums:3423,\n      },\n      {\n          name:'韩版设计时尚风衣大',\n          number:'MPM00112',\n          salePrice:'￥999.00',\n          stocknums:3423,\n          salesnums:3423,\n          sharenums:3423,\n      },\n    ]\n  }\n \nmethods:{\n    formatJson(filterVal, jsonData) {\n    　　　　return jsonData.map(v => filterVal.map(j => v[j]))\n    　　},\n    export2Excel() {\n    　　　　require.ensure([], () => {\n    　　　　　　const { export_json_to_excel } = require('../../../vendor/Export2Excel');\n    　　　　　　const tHeader = ['商品名称','商品货号','售价','库存','销量','分享',];\n    　　　　　　const filterVal = ['name', 'number', 'salePrice', 'stocknums', 'salesnums', 'sharenums', ];\n    　　　　　　const list = this.list;\n    　　　　　　const data = this.formatJson(filterVal, list);\n    　　　　　　export_json_to_excel(tHeader, data, '商品管理列表');\n    　　　　})\n    　 }\n}\ntemplate:\n\n<button @click=\"export2Excel\">导出</button>\n")])])]),s("p",[t._v("这里说明一下：")]),t._v(" "),s("p",[t._v("export2Excel()中require的路径因个人项目结构不同可能需要单独调整，如果报module not found '../../Export2Excel.js'之类请自行修改路径。 tHeader是每一栏的名称，需手动输入。 filterVal是data中list的key值，也是要自己写的。 这里记得要与data里面的list名称对应")])])}),[],!1,null,null,null);a.default=e.exports}}]);